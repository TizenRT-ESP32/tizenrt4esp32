Import('env')
lib_env = env.Clone()
SConscript('#service/third_party_libs.scons', 'lib_env')
sim_env = lib_env.Clone()

######################################################################
# Build flags
######################################################################
sim_env.AppendUnique(CPPPATH = ['../../../../extlibs/timer'])
sim_env.AppendUnique(CPPPATH = ['../../inc'])
sim_env.AppendUnique(CXXFLAGS = ['-std=c++0x', '-Wall', '-pthread'])
sim_env.AppendUnique(CPPDEFINES = ['LINUX'])
sim_env.AppendUnique(LIBS = ['SimulatorManager'])

sim_env.AppendUnique(LIBPATH = [env.get('BUILD_DIR')])
sim_env.AppendUnique(RPATH = [env.get('BUILD_DIR')])
sim_env.PrependUnique(LIBS = ['SimulatorManager'])

if sim_env.get('SECURED') == '1':
    sim_env.AppendUnique(LIBS = ['mbedtls', 'mbedx509', 'mbedcrypto'])

######################################################################
# Source files and Targets
######################################################################
server = sim_env.Program('simulator-server', 'simulator_server.cpp')

Alias("server", server)
env.AppendTarget('server')
